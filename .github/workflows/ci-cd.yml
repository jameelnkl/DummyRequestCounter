name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  lint-test:
    name: Lint & Test (FastAPI + Redis service)
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping || exit 1"
          --health-interval=5s
          --health-timeout=3s
          --health-retries=20

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Optional: add flake8 or ruff later if you like
      # - name: Lint
      #   run: pip install ruff && ruff check .

      - name: Boot FastAPI (background)
        env:
          # point the app at the Redis service running on the runner
          REDIS_HOST: 127.0.0.1
          REDIS_PORT: 6379
          REDIS_DB: 0
        run: |
          nohup python -m uvicorn app.app:app --host 127.0.0.1 --port 8000 >/tmp/uvicorn.log 2>&1 & echo $! > /tmp/uvicorn.pid

      - name: Wait for /health
        run: |
          for i in {1..30}; do
            if curl -fsS http://127.0.0.1:8000/health >/dev/null; then
              echo "App is up"; exit 0
            fi
            sleep 1
          done
          echo "App did not become healthy"
          echo "---- Uvicorn log ----"
          cat /tmp/uvicorn.log || true
          exit 1

      - name: Hit endpoints
        run: |
          echo "GET /"
          curl -fsS http://127.0.0.1:8000/
          echo
          echo "GET /docs"
          curl -fsS http://127.0.0.1:8000/docs >/dev/null && echo "Docs OK"

      - name: Show app logs on success (optional)
        if: success()
        run: |
          echo "---- Uvicorn log (tail) ----"
          tail -n 200 /tmp/uvicorn.log || true

      - name: Teardown app
        if: always()
        run: |
          kill $(cat /tmp/uvicorn.pid) 2>/dev/null || true

  docker-build:
    name: Build Docker image
    runs-on: ubuntu-latest
    needs: lint-test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show Compose config (sanity)
        run: docker compose config

      - name: Build image (no push)
        run: docker build -t dummy-request-counter:ci .
